// Generated by Apple Swift version 4.0 (swiftlang-900.0.65 clang-900.0.37)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_attribute(external_source_symbol)
# define SWIFT_STRINGIFY(str) #str
# define SWIFT_MODULE_NAMESPACE_PUSH(module_name) _Pragma(SWIFT_STRINGIFY(clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in=module_name, generated_declaration))), apply_to=any(function, enum, objc_interface, objc_category, objc_protocol))))
# define SWIFT_MODULE_NAMESPACE_POP _Pragma("clang attribute pop")
#else
# define SWIFT_MODULE_NAMESPACE_PUSH(module_name)
# define SWIFT_MODULE_NAMESPACE_POP
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR __attribute__((enum_extensibility(open)))
# else
#  define SWIFT_ENUM_ATTR
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_ATTR SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if __has_feature(modules)
@import UIKit;
@import CoreGraphics;
@import Foundation;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

SWIFT_MODULE_NAMESPACE_PUSH("TokenField")
@class UIColor;
@class NSCoder;

/// Represents a token view object in the token field.
SWIFT_CLASS("_TtC10TokenField5Token")
@interface Token : UIView
/// Token’s title. Immutable.
@property (nonatomic, readonly, copy) NSString * _Nonnull title SWIFT_DEPRECATED_OBJC("Swift property 'Token.title' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
/// UIColor representing the color for the Token. Changing this value automatically calls the private method updateUI().
@property (nonatomic, strong) UIColor * _Nonnull colorScheme SWIFT_DEPRECATED_OBJC("Swift property 'Token.colorScheme' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
/// Takes the title for the token and returns a Token sublclass of UIView. The Token is not highlighted and is UIColor.blue.
- (nonnull instancetype)initWithTitle:(NSString * _Nonnull)title OBJC_DESIGNATED_INITIALIZER SWIFT_DEPRECATED_OBJC("Swift initializer 'Token.init(title:)' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
/// <ul>
///   <li>
///     warn: Not imlpemented! fatalError(“init(coder:) has not been implemented”)
///   </li>
/// </ul>
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
/// Returns the intrinsicContentSize. The preffered size of the view.
@property (nonatomic, readonly) CGSize intrinsicContentSize;
/// Returns the intrinsicContentSize.
- (CGSize)sizeThatFits:(CGSize)size SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end

@class UILabel;
@class UITextView;

/// TokenField subclass of UIView to display tokens and text as in the messages and mail app.
SWIFT_CLASS("_TtC10TokenField10TokenField")
@interface TokenField : UIView
/// TokenField’s maximum height value.
@property (nonatomic) CGFloat maxHeight SWIFT_DEPRECATED_OBJC("Swift property 'TokenField.maxHeight' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
/// TokenField’s vertical inset.
@property (nonatomic) CGFloat verticalInset SWIFT_DEPRECATED_OBJC("Swift property 'TokenField.verticalInset' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
/// TokenField’s horizontal inset.
@property (nonatomic) CGFloat horizontalInset SWIFT_DEPRECATED_OBJC("Swift property 'TokenField.horizontalInset' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
/// TokenField’s token padding.
@property (nonatomic) CGFloat tokenPadding SWIFT_DEPRECATED_OBJC("Swift property 'TokenField.tokenPadding' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
/// TokenField’s minimum input text width.
@property (nonatomic) CGFloat minInputWidth SWIFT_DEPRECATED_OBJC("Swift property 'TokenField.minInputWidth' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
/// Keyboard type inital value .default.
@property (nonatomic) UIKeyboardType inputTextViewKeyboardType SWIFT_DEPRECATED_OBJC("Swift property 'TokenField.inputTextViewKeyboardType' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
/// Keyboard appearance initial value .default.
@property (nonatomic) UIKeyboardAppearance keyboardAppearance SWIFT_DEPRECATED_OBJC("Swift property 'TokenField.keyboardAppearance' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
/// Autocorrection type for textView initial value .no
@property (nonatomic) UITextAutocorrectionType autocorrectionType SWIFT_DEPRECATED_OBJC("Swift property 'TokenField.autocorrectionType' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
/// Autocapitalization type for textView inital value .sentences
@property (nonatomic) UITextAutocapitalizationType autocapitalizationType SWIFT_DEPRECATED_OBJC("Swift property 'TokenField.autocapitalizationType' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
/// Input accessory view for textView.
@property (nonatomic, strong) UIView * _Nullable inputTextViewAccessoryView SWIFT_DEPRECATED_OBJC("Swift property 'TokenField.inputTextViewAccessoryView' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
/// To label text color.
@property (nonatomic, strong) UIColor * _Nonnull toLabelTextColor SWIFT_DEPRECATED_OBJC("Swift property 'TokenField.toLabelTextColor' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
/// To label text.
@property (nonatomic, copy) NSString * _Nonnull toLabelText SWIFT_DEPRECATED_OBJC("Swift property 'TokenField.toLabelText' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
/// Input textView text color.
@property (nonatomic, strong) UIColor * _Nonnull inputTextViewTextColor SWIFT_DEPRECATED_OBJC("Swift property 'TokenField.inputTextViewTextColor' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
/// TokenField color scheme, initial value = .blue
@property (nonatomic, strong) UIColor * _Nonnull colorScheme SWIFT_DEPRECATED_OBJC("Swift property 'TokenField.colorScheme' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
/// Input textView accessibility label.
@property (nonatomic, copy) NSString * _Null_unspecified inputTextViewAccessibilityLabel SWIFT_DEPRECATED_OBJC("Swift property 'TokenField.inputTextViewAccessibilityLabel' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
/// To label. Lazily instantiated.
@property (nonatomic, strong) UILabel * _Nonnull toLabel SWIFT_DEPRECATED_OBJC("Swift property 'TokenField.toLabel' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
/// Input textView. Lazily instantited.
@property (nonatomic, strong) UITextView * _Nonnull inputTextView SWIFT_DEPRECATED_OBJC("Swift property 'TokenField.inputTextView' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
///
/// returns:
/// <code>Bool</code> value which is true if the TokenField view is the first responder.
@property (nonatomic, readonly) BOOL isFirstResponder;
/// Initializes a TokenField with a <code>CGRect</code> frame within it’s superview.
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
/// Initializer used by the storyboard to initialize a TokenField.
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
/// TokenField override of UIView’s awakeFromNib() function. Calls super.awakeFromNib() and then self.setup().
- (void)awakeFromNib;
/// TokenField calls self.layoutTokensAndInputWithFrameAdjustment(true) and self.inputTextViewBecomeFirstResponder()
///
/// returns:
/// Always returns <code>true</code>
- (BOOL)becomeFirstResponder SWIFT_WARN_UNUSED_RESULT;
/// Resigns first responder.
- (BOOL)resignFirstResponder SWIFT_WARN_UNUSED_RESULT;
/// Collapses the TokenField.
- (void)collapse SWIFT_DEPRECATED_OBJC("Swift method 'TokenField.collapse()' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
/// Reload’s the TokenField’s data and lays out it’s views.
- (void)reloadData SWIFT_DEPRECATED_OBJC("Swift method 'TokenField.reloadData()' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
///
/// returns:
/// the input text from the textView.
@property (nonatomic, readonly, copy) NSString * _Nonnull inputText SWIFT_DEPRECATED_OBJC("Swift property 'TokenField.inputText' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
/// Lays out the TokenField’s subviews.
- (void)layoutSubviews;
@end


@interface TokenField (SWIFT_EXTENSION(TokenField))
/// :nodoc:
- (void)didTapToken:(Token * _Nonnull)token SWIFT_DEPRECATED_OBJC("Swift method 'TokenField.didTapToken(_:)' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
@end




@interface TokenField (SWIFT_EXTENSION(TokenField)) <UITextViewDelegate>
/// :nodoc:
- (void)textViewDidChange:(UITextView * _Nonnull)textView;
/// :nodoc:
- (BOOL)textView:(UITextView * _Nonnull)textView shouldChangeTextInRange:(NSRange)range replacementText:(NSString * _Nonnull)text SWIFT_WARN_UNUSED_RESULT;
/// :nodoc:
- (void)textViewDidBeginEditing:(UITextView * _Nonnull)textView;
@end

SWIFT_MODULE_NAMESPACE_POP
#pragma clang diagnostic pop
